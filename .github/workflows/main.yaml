name: main

on:
  - push

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  unix-like:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    continue-on-error: true

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - run: vcpkg install gtest

      - # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory build

      - # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: build
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake

      - working-directory: build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - working-directory: build
        shell: bash
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE

  windows:
    continue-on-error: true

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - run: vcpkg integrate install

      - run: vcpkg install gtest:x64-windows

      - run: cmake -E make_directory build

      - run: cmake $Env:GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$Env:BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE="$Env:VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
        working-directory: build

      - run: cmake --build . --config $Env:BUILD_TYPE
        working-directory: build

      - run: ctest -C $Env:BUILD_TYPE
        working-directory: build
